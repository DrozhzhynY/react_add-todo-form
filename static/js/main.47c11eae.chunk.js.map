{"version":3,"sources":["api/users.js","api/todos.js","components/TodoList/TodoList.js","components/NewTodo/NewTodo.js","App.js","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","TodoList","map","todo","className","key","NewTodo","state","props","todoId","status","showTitleError","showUserError","showStatusError","addTodoText","event","setState","target","value","replace","addUser","find","user","checkStatusTodo","statusValue","Boolean","reset","prev","sendTodo","addTodos","trim","preventDefault","length","this","onSubmit","onChange","type","e","hidden","React","Component","App","defaultTodos","newTodo","nextTodoId","ReactDOM","render","document","getElementById"],"mappings":"uTAyOeA,G,MAzOD,CACZ,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,wBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,yCACbC,GAAI,gCAGR,CACEhB,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,gBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,sBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,eACNc,YAAa,iCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,qBACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,YACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,iBACPC,QAAS,cACTC,QAAS,CACPb,KAAM,qBACNc,YAAa,oCACbC,GAAI,oCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,4BACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,WACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,2CACbC,GAAI,yCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,2BACPC,QAAS,CACPC,OAAQ,eACRC,MAAO,YACPC,KAAM,aACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,gBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,cACNc,YAAa,uCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,WACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,uBACPC,QAAS,UACTC,QAAS,CACPb,KAAM,oBACNc,YAAa,qCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,YACRC,MAAO,YACPC,KAAM,YACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,WACTC,QAAS,CACPb,KAAM,cACNc,YAAa,qCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,uBACPC,QAAS,CACPC,OAAQ,mBACRC,MAAO,YACPC,KAAM,YACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,gCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,aACRC,MAAO,YACPC,KAAM,iBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,uBACPC,QAAS,aACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,wCACbC,GAAI,qCAGR,CACEhB,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,kBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,cACTC,QAAS,CACPb,KAAM,aACNc,YAAa,oCACbC,GAAI,+BCnNKC,EAfD,CACZ,CACEC,OAAQ,EACRlB,GAAI,EACJmB,MAAO,qBACPC,WAAW,GAEb,CACEF,OAAQ,EACRlB,GAAI,EACJmB,MAAO,qCACPC,WAAW,ICkBAC,G,MA3BE,SAAC,GAAD,IAAGJ,EAAH,EAAGA,MAAH,OACf,oCACGA,EAAMK,KAAI,SAAAC,GAAI,OACb,yBAAKC,UAAU,OAAOC,IAAKF,EAAKvB,IAC7BuB,EAAKvB,GADR,IAGE,4BAAKuB,EAAKJ,OACV,2BAAII,EAAKtB,MACT,qCAEGsB,EAAKH,UACF,2CACA,uDC+KCM,G,kNA1LbC,MAAQ,CACNR,MAAO,GACPlB,KAAM,GACNmB,UAAW,GACXF,OAAQ,GACRlB,GAAI,EAAK4B,MAAMC,OACfC,OAAQ,GACRC,gBAAgB,EAChBC,eAAe,EACfC,iBAAiB,G,EAGnBC,YAAc,SAACC,GACb,EAAKC,SACH,CACEjB,MAAOgB,EAAME,OAAOC,MAAMC,QAAQ,4BAAmB,IACrDR,gBAAgB,K,EAKtBS,QAAU,SAACxC,GAAQ,IACTD,EAAU,EAAK6B,MAAf7B,MAER,EAAKqC,SACH,CACElB,QAASlB,EACTC,KAAMF,EAAM0C,MAAK,SAAAC,GAAI,OAAIA,EAAK1C,MAAQA,KAAIC,KAC1C+B,eAAe,K,EAKrBW,gBAAkB,SAACR,GACjB,IAAMS,EAAcT,EAAME,OAAOC,MAEjC,EAAKF,SAAS,CACZhB,UAAWyB,SAASD,GACpBd,OAAQc,EACRX,iBAAiB,K,EAIrBa,MAAQ,WACN,EAAKV,UAAS,SAAAW,GAAI,MAChB,CACE5B,MAAO,GACPlB,KAAM,GACNmB,UAAW,GACXF,OAAQ,GACRlB,GAAI+C,EAAK/C,GAAK,EACd8B,OAAQ,GACRC,gBAAgB,EAChBC,eAAe,EACfC,iBAAiB,O,EAKvBe,SAAW,SAACb,GAAW,IAAD,EAC4B,EAAKR,MAA7C1B,EADY,EACZA,KAAMiB,EADM,EACNA,OAAQlB,EADF,EACEA,GAAIoB,EADN,EACMA,UAAWU,EADjB,EACiBA,OAC/BX,EAAU,EAAKQ,MAAfR,MACE8B,EAAa,EAAKrB,MAAlBqB,SAKR,GAHA9B,EAAQA,EAAM+B,OAEdf,EAAMgB,iBACe,IAAjBhC,EAAMiC,QAA2B,OAAXlC,GAAqC,IAAlBY,EAAOsB,OAyBlD,OAxBA,EAAKhB,SAAS,CACZL,gBAAgB,EAChBC,eAAe,EACfC,iBAAiB,IAGfd,GACF,EAAKiB,SAAS,CACZL,gBAAgB,IAIhBb,GACF,EAAKkB,SAAS,CACZJ,eAAe,SAIfF,GACF,EAAKM,SAAS,CACZH,iBAAiB,KAOvBgB,EAAS,CACPhD,OACAkB,QACAD,SACAlB,KACAoB,cAGF,EAAK0B,S,uDAGG,IAAD,OACC/C,EAAUsD,KAAKzB,MAAf7B,MADD,EASHsD,KAAK1B,MANPR,EAHK,EAGLA,MACAY,EAJK,EAILA,eACAb,EALK,EAKLA,OACAc,EANK,EAMLA,cACAF,EAPK,EAOLA,OACAG,EARK,EAQLA,gBAGF,OACE,oCACE,0BAAMT,UAAU,OAAO8B,SAAUD,KAAKL,UACpC,2BAAOxB,UAAU,cAAjB,aAEE,2BACEc,MAAOnB,EACPoC,SAAUF,KAAKnB,YACfsB,KAAK,SAENzB,GAEG,yBAAKP,UAAU,wBAAf,2BAMN,2BAAOA,UAAU,cAAjB,aAEE,4BACEc,MAAOpB,EACPqC,SAAU,SAAAE,GAAC,OAAI,EAAKjB,QAAQiB,EAAEpB,OAAOC,SAErC,4BAAQA,MAAM,GAAGoB,QAAM,GAAvB,iBAGC3D,EAAMuB,KAAI,SAAAoB,GAAI,OACb,4BACEjB,IAAKiB,EAAK1C,GACVsC,MAAOI,EAAK1C,IAEX0C,EAAKzC,UAIX+B,GACI,uBAAGR,UAAU,wBAAb,uBAGP,2BAAOA,UAAU,cAAjB,iBAEE,4BACEc,MAAOR,EACPyB,SAAUF,KAAKV,iBAEf,4BAAQL,MAAM,GAAGoB,QAAM,GAAvB,gBACA,4BAAQpB,MAAO,GAAf,aACA,4BAAQA,MAAO,GAAf,kBAEDL,GACI,uBAAGT,UAAU,wBAAb,yBAGP,2BAAOgC,KAAK,SAASlB,MAAM,iB,GA5KfqB,IAAMC,YCyCbC,E,4MAnCblC,MAAQ,CACNV,MAAO6C,EAAaxC,KAAI,SAAAC,GAAI,kCACvBA,GADuB,IAE1BmB,KAAM3C,EAAM0C,MAAK,SAAAC,GAAI,OAAIA,EAAK1C,KAAOuB,EAAKL,gB,EAI9C+B,SAAW,SAACc,GACV,EAAK3B,UAAS,SAAAW,GAAI,MAChB,CAAE9B,MAAM,GAAD,mBAAM8B,EAAK9B,OAAX,CAAkB8C,S,uDAInB,IACA9C,EAAUoC,KAAK1B,MAAfV,MACF+C,EAAc/C,EAAMA,EAAMmC,OAAS,GAAGpD,GAAK,EAEjD,OACE,yBAAKwB,UAAU,OACb,wBAAIA,UAAU,cAAd,aACA,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEzB,MAAOA,EACPkD,SAAUI,KAAKJ,SACfpB,OAAQmC,KAGZ,yBAAKxC,UAAU,cACb,kBAAC,EAAD,CAAUP,MAAOA,U,GA7BT0C,IAAMC,WCLxBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.47c11eae.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n\n// class NewTodo extends React.Component {\n//   state = {\n//     title: '',\n//     name: '',\n//     completed: '',\n//     userId: null,\n//     id: this.props.todoId,\n//     status: '',\n//     showTitleError: false,\n//     showUserError: false,\n//     showStatusError: false,\n//   }\n\n//   addTodoText = (event) => {\n//     this.setState(\n//       {\n//         title: event.target.value.replace(/[^a-zа-я0-9\\s]/g, ''),\n//         showTitleError: false,\n//       },\n//     );\n//   }\n\n//   addUser = (id) => {\n//     const { users } = this.props;\n\n//     this.setState(\n//       {\n//         userId: +id,\n//         name: users.find(user => user.id === +id).name,\n//         showUserError: false,\n//       },\n//     );\n//   }\n\n//   checkStatusTodo = (event) => {\n//     const { value } = event.target.value;\n\n//     this.setState({\n//       completed: Boolean(+value),\n//       status: value,\n//       showStatusError: false,\n//     });\n//   }\n\n//   reset = () => {\n//     this.setState(prev => (\n//       {\n//         title: '',\n//         name: '',\n//         completed: '',\n//         userId: '',\n//         id: prev.id + 1,\n//         status: '',\n//         showTitleError: false,\n//         showUserError: false,\n//         showStatusError: false,\n//       }\n//     ));\n//   }\n\n//   sendTodo = (event) => {\n//     const { name, userId, id, completed, status } = this.state;\n//     let { title } = this.state;\n//     const { addTodos } = this.props;\n\n//     title = title.trim();\n\n//     event.preventDefault();\n//     if (title.length === 0) {\n//       this.setState({\n//         showTitleError: true,\n//         showUserError: true,\n//         showStatusError: true,\n//       });\n\n//       if (title) {\n//         this.setState({\n//           showTitleError: false,\n//         });\n//       }\n\n//       if (userId) {\n//         this.setState({\n//           showUserError: false,\n//         });\n//       }\n\n//       if (status) {\n//         this.setState({\n//           showStatusError: false,\n//         });\n//       }\n\n//       return;\n//     }\n\n//     addTodos({\n//       name,\n//       title,\n//       userId,\n//       id,\n//       completed,\n//     });\n\n//     this.reset();\n//   }\n\n//   render() {\n//     const { users } = this.props;\n//     const {\n//       title,\n//       showTitleError,\n//       userId,\n//       showUserError,\n//       status,\n//       showStatusError,\n//     } = this.state;\n\n//     return (\n//       <>\n//         <form className=\"form\" onSubmit={this.sendTodo}>\n//           <label className=\"form__item\">\n//             <span className=\"form__name\">Todo title</span>\n//             <input\n//               className={showTitleError\n//                 ? 'form__error'\n//                 : ''}\n//               value={title}\n//               onChange={this.addTodoText}\n//               type=\"text\"\n//             />\n//             {showTitleError\n//               && (\n//                 <div className=\"form__error--message\">\n//                   Please enter the title\n//                 </div>\n//               )\n//             }\n//           </label>\n//           <br />\n//           <label className=\"form__item\">\n//             <span className=\"form__name\">Chose user</span>\n//             <select\n//               className={showUserError\n//                 ? 'form__error'\n//                 : ''}\n//               value={userId}\n//               onChange={e => this.addUser(e.target.value)}\n//             >\n//               <option value=\"\" hidden>\n//                 Choose a user\n//               </option>\n//               {users.map(user => (\n//                 <option\n//                   key={user.id}\n//                   value={user.id}\n//                 >\n//                   {user.name}\n//                 </option>\n//               ))}\n//             </select>\n//             {showUserError\n//               && (\n//                 <div className=\"form__error--message\">\n//                   Please choose user\n//                 </div>\n//               )\n//             }\n//           </label>\n//           <br />\n//           <label className=\"form__item\">\n//             <span className=\"form__name\">Status</span>\n//             <select\n//               className={showStatusError\n//                 ? 'form__error'\n//                 : ''}\n//               value={status}\n//               onChange={this.checkStatusTodo}\n//             >\n//               <option value=\"\" hidden>Chose status</option>\n//               <option value={1}>completed</option>\n//               <option value={0}>not completed</option>\n//             </select>\n//             {showStatusError\n//               && (\n//                 <div className=\"form__error--message\">\n//                   Please choose status\n//                 </div>\n//               )\n//             }\n//           </label>\n//           <br />\n//           <input type=\"submit\" value=\"Submit\" />\n//         </form>\n//       </>\n//     );\n//   }\n// }\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\n\nconst TodoList = ({ todos }) => (\n  <>\n    {todos.map(todo => (\n      <div className=\"card\" key={todo.id}>\n        {todo.id}\n        .\n        <h3>{todo.title}</h3>\n        <p>{todo.name}</p>\n        <p>\n          Status:\n          {todo.completed\n            ? <span>completed</span>\n            : <span>not completed</span>\n          }\n        </p>\n      </div>\n    ))}\n  </>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './NewTodo.css';\n\nclass NewTodo extends React.Component {\n  state = {\n    title: '',\n    name: '',\n    completed: '',\n    userId: '',\n    id: this.props.todoId,\n    status: '',\n    showTitleError: false,\n    showUserError: false,\n    showStatusError: false,\n  }\n\n  addTodoText = (event) => {\n    this.setState(\n      {\n        title: event.target.value.replace(/[^a-zа-я0-9\\s]/g, ''),\n        showTitleError: false,\n      },\n    );\n  }\n\n  addUser = (id) => {\n    const { users } = this.props;\n\n    this.setState(\n      {\n        userId: +id,\n        name: users.find(user => user.id === +id).name,\n        showUserError: false,\n      },\n    );\n  }\n\n  checkStatusTodo = (event) => {\n    const statusValue = event.target.value;\n\n    this.setState({\n      completed: Boolean(+statusValue),\n      status: statusValue,\n      showStatusError: false,\n    });\n  }\n\n  reset = () => {\n    this.setState(prev => (\n      {\n        title: '',\n        name: '',\n        completed: '',\n        userId: '',\n        id: prev.id + 1,\n        status: '',\n        showTitleError: false,\n        showUserError: false,\n        showStatusError: false,\n      }\n    ));\n  }\n\n  sendTodo = (event) => {\n    const { name, userId, id, completed, status } = this.state;\n    let { title } = this.state;\n    const { addTodos } = this.props;\n\n    title = title.trim();\n\n    event.preventDefault();\n    if (title.length === 0 || userId === null || status.length === 0) {\n      this.setState({\n        showTitleError: true,\n        showUserError: true,\n        showStatusError: true,\n      });\n\n      if (title) {\n        this.setState({\n          showTitleError: false,\n        });\n      }\n\n      if (userId) {\n        this.setState({\n          showUserError: false,\n        });\n      }\n\n      if (status) {\n        this.setState({\n          showStatusError: false,\n        });\n      }\n\n      return;\n    }\n\n    addTodos({\n      name,\n      title,\n      userId,\n      id,\n      completed,\n    });\n\n    this.reset();\n  }\n\n  render() {\n    const { users } = this.props;\n    const {\n      title,\n      showTitleError,\n      userId,\n      showUserError,\n      status,\n      showStatusError,\n    } = this.state;\n\n    return (\n      <>\n        <form className=\"form\" onSubmit={this.sendTodo}>\n          <label className=\"form__item\">\n            Todo title\n            <input\n              value={title}\n              onChange={this.addTodoText}\n              type=\"text\"\n            />\n            {showTitleError\n              && (\n                <div className=\"form__error--message\">\n                  Please enter the title\n                </div>\n              )\n            }\n          </label>\n          <label className=\"form__item\">\n            Chose user\n            <select\n              value={userId}\n              onChange={e => this.addUser(e.target.value)}\n            >\n              <option value=\"\" hidden>\n                Choose a user\n              </option>\n              {users.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {showUserError\n              && <p className=\"form__error--message\">Please choose user</p>\n            }\n          </label>\n          <label className=\"form__item\">\n            Status of todo\n            <select\n              value={status}\n              onChange={this.checkStatusTodo}\n            >\n              <option value=\"\" hidden>Chose status</option>\n              <option value={1}>completed</option>\n              <option value={0}>not completed</option>\n            </select>\n            {showStatusError\n              && <p className=\"form__error--message\">Please choose status</p>\n            }\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n  todoId: PropTypes.number.isRequired,\n  addTodos: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport './App.css';\n\nimport users from './api/users';\nimport defaultTodos from './api/todos';\n\nimport TodoList from './components/TodoList/TodoList';\nimport NewTodo from './components/NewTodo/NewTodo';\n\nclass App extends React.Component {\n  state = {\n    todos: defaultTodos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    })),\n  }\n\n  addTodos = (newTodo) => {\n    this.setState(prev => (\n      { todos: [...prev.todos, newTodo] }\n    ));\n  }\n\n  render() {\n    const { todos } = this.state;\n    const nextTodoId = (todos[todos.length - 1].id + 1);\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">Todo form</h1>\n        <div className=\"todo__form\">\n          <NewTodo\n            users={users}\n            addTodos={this.addTodos}\n            todoId={nextTodoId}\n          />\n        </div>\n        <div className=\"todo__list\">\n          <TodoList todos={todos} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}